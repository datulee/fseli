>RIP
Rip პროტოკოლი->დინამიური მარშუტიზაციის პროტოკოლი, არის ვექტორული,
იენებს მარტივ ალგორითმს, საუკეთესო მარშუტის ასარჩევად, შუალედური მოწყობილობების
დახმარებით.მნიშვნელოვანია ჰოპების რაოდენობა, 30 წამმში ერთხელ კი მიდის 
როუტერებში გზავნილების განახლება, რიპი ასევე იყენებს მეტრიკას და udp პროტოკოლს
ინფორმაციის გასავრცელებლად.შემოწმებისას show ip route-> R->ნასწავლი მარშუტი.
მთავარია რიპის დროს ვასწავლოთ როუტერებსსშორის მოთავსებული ქსელი და ასეევე
როუტერის საკუთარი ქსელი;
Router>en
Router#conf t
Router(config)#router rip
Router(config-router)#version 2
Router(config-router)#network 192.168.1.0
Router(config-router)#network 192.168.0.0
Router(config-router)#no auto-summary
Router(config-router)#exit
__________________________________________________________
>STATIC
სტატიკური მარშუტიზაცია -> მექანიკურად ანუ ხელით დანიშნული ქსელები,
რომელსაც ნიშნავს ადმინისტრატორი და კლასიკურად ასწავლის ქსელებს
როუტერებს.დინამიურისგან განსხვავებით აქ ვასწავლით გამავალ და სხვა
როუტერის ქსელებს და არა თავისას. პაკეტტრეისერში შემოწმებისას კი
show ip route-> S-ნასწავლი ქსელი, C-> მიქონექთებული ქსელი;
სასწავლად ბრძანებაში ვიყენებთ ქსელს,მასკას და ნექსთ ჰოპს ანუ
მოპირდაპირე როუტერის დამაკავშირებელ პორტს;
მაგალითად: R1- - - - - - - -R2
              g0/0       g0/1
              
Next hop R1 = g0/1
Next hop R2 = g0/0

Router>en
Router#conf t
Router(config)#ip route 192.168.0.0 255.255.255.0 192.168.0.2
Router(config)#ip route 192.168.2.0 255.255.255.0 192.168.0.2
Router(config)#exit
______________________________________________________________


>OSPF
მუშაობის სისტემა->ნავიგაციის სტილი, ანუ ექმნება რუკა და იმ რუკიდან აირჩევს
საუკეთესო გზას. როუტერები ამყარებენ ერთმანეთში მეზობლობას და LSA პაკეტები
ამოქმედდებიან, სადაც ქსელის ინფოა ჩადებული და შექმნიან LSDB ტოპოლოგიურ
რუკას მთლიანი ქსსელისას და ამ რუკაში STP ალგორითმი გამტარუნარიანობის
მიხედვით ირჩევს საუკეთესო გზას და იყოფა არეებად, რადგან როცა შედარებით 
დიდი ქსელი გვაქ, თითო არეში მარტივად მოძრაობს LSA პაკეტები. ასევე
გვაქვს Hello packets, კავშირისთვის. ვასწავლით თავის ქსელს, ვყოფთ არეებად და + 
ვაილდქარდი.  show ip route->O->პროტოკოლი არსებობს,D-> ბაზაშ ქსელის შესვლა.C->დაქონექტებული ქსელი.
Router>en
Router#conf t
Router(config) hn R2
R2(config)#router ospf 1
R2(config-router)#network 192.168.12.0 0.0.0.255 area 0
R2(config-router)#network 192.168.23.0 0.0.0.255 area 0
R2(config-router)#network 192.168.2.0 0.0.0.255 area 0


______________________________________________________________
>EIGRP
eigrp->დინამიური მარშუტიზაციის პროტოკოლი, არის ჰიბრიდული, რადგან
აქ გვაქვს ალგორითმი სადაც მოქეულია vector+link-state; ამყარებს მეზობლობას
hello პაკეტების საშუალებით, რომელსაც გაშვების შემდეგ უკან იღებს და ამით
ცვლიან ინფოებს. ასევე ადგენენ რპუტერები ცხრილს და ეიჯიარფის ცხრილი მოიცავს
შემდეგს: მეზობელი როუტერების ბაზას, ანუ პირდაპირ მიქონექთებუი როუტერები;
ტოპოლოგიის რუკა სადაც მოთავსებულია საუკეთესო გზები და მარშუტიზაციის ცხრილი
-> ქსელები და გზის ღირებულებები. საუკეთესო გზიას ირჩევს დაანონსებული გზით,
როუტერი ქსელებს და გზებს ინახავს, ითვლის საუკეთეოსო ღრებულებას, ეყრდნობა გამტარუნარი
ანობას და მუშაობს. შემოწმება: show ip route->D->პროტოკოლი არსებობს, C->დაქონექტებული ქსელი.
აქ ვასწავლით თავის ქსელს ვაილდქარდით.
როცა /24 ქსელია ->255.255.255.0
wildcard = 255.255.255.255 - 255.255.255.0 = 0.0.0.255

Router>en
Router#conf t
Router(config) hn R3
R3(config)#router eigrp 1
R3(config-router)#network 192.168.23.0 0.0.0.255
R3(config-router)#network 192.168.13.0 0.0.0.255
R3(config-router)#network 192.168.1.0 0.0.0.255


___________________________.___________________________________

>VLANS
ვილანი არის ტექნოლოგია, რონელიც ერთ ქსელს ყოფს რამოდენიმე ლოკალურ ქსელად,
რომლებიც იზოლირებულია ერთმანეთისგან. ის მუშაობს კომუტატორებზე ანუ სვიჩებზე,
და ეყრდნობა OSI მოდელის data link დონეს. აქვს შემდეგი პორტები. Acces port-მიეკუთვნება ერთ ლოკალურ
ქსელს, Trunk port ყველა ვილანის გატარება, ეს გვინდა როცა როუტერთან ვაერთებთ სვიჩს, ან სვიჩს სვიჩთან.
ვლანის ტიპებია, მონაცემთა ვილანი->კლიენტის მიერ დაგენერირებული ტრაფიკის გასაგზავნად, Default Vlan->
საწყისი კონფიგურაციის შედეგად მიღებული ვილანი, Native Vlan-> trunk შეტანილი ვილანი, რომელიც ატარებს
დანიშნულ და დაუნიშნავ ტრაფიკებსაც.
ვილანების შექმნა.
Switch>en
Switch#conf t
Switch(config)#vlan 8
Switch(config-vlan)#name IT
Switch(config-vlan)#exit
Switch(config)#vlan 18
Switch(config-vlan)#name HR
Switch(config-vlan)#exit
Switch(config)#vlan 28
Switch(config-vlan)#name SALES
Switch(config-vlan)#exit
მათი გაწევრიანება პორტში.
Switch>en
Switch#conf t
Switch(config)#int fa0/2
Switch(config-if)#switchport mode access 
Switch(config-if)#switchport access vlan 28
Switch(config-if)#exit
ტრანკის ჩართვა პორტზე.
Switch>en
Switch#conf t
Switch(config)#int fa0/1
Switch(config-if)#switchport mode trunk 
Switch(config-if)#exit
ენკაფსულაცია, როცა როუტერიდან ვრთავთ ყველა ვილანს.
Router>en
Router#conf t
Router(config)#int g0/0
Router(config-if)#no sh
Router(config-if)#exit
Router(config)#int g0/0.1
Router(config-subif)#encapsulation dot1Q 8
Router(config-subif)#ip add 192.168.5.1 255.255.255.0
Router(config-subif)#no sh
Router(config-subif)#exit
Router(config)#int g0/0.2
Router(config-subif)#encapsulation dot1Q 18
Router(config-subif)#ip add 192.168.6.1 255.255.255.0
Router(config-subif)#no sh
Router(config-subif)#exit
Router(config)#int g0/0.3
Router(config-subif)#encapsulation dot1Q 28
Router(config-subif)#ip add 192.168.7.1 255.255.255.0
Router(config-subif)#no sh
Router(config-subif)#exit
___________________________________________________

>ACL
წვდომის კონტროლის სია, ქსელის უსაფრთხოების ფუნქცია, რომელიც ფილტრავს ქსელს და მის ინფორმაციას
და ახორციელებს ტრაფიკის დაშვებას ან აკრძალვას. კონფიფურირდება როუტერზე,სვიჩზე, ფაიერვოლზე.
იღებს პალეტს, კითხულობს და წყვეტს გაუშვას თუ არა სხვა ქსელში. ის არის ერთგვარი ჩამონათვალი,სადაც
პაკეტების კატეგორიზაცია ხდება. მუშაობს OSI მოდელის ქსელის და სატრანსპორტო დონეზე.
ACL შეგვიძლია დავაკონფიგურიროთ inbound(შემავალ), outbound(გამომავალ) პორტებზე. ინბაუნდის დროს
პაკეტი მოდის ქსელში, გადამოწმდება და მიდის როუტერებთან. აუთბაუნდზე ჯერ როოუტერთან მიდის და
როუტერი ამოწმებს და წყვეტს გაუშვას თუ არა.
standard ACL->კონცენტრირებულია მხოლოდ აიპიზე, შეგვიძლია მივანიჭოთ ნომრები 1-99, 1300-1999;
extended ACL->კონცენტრირებულია აიპიზე, პორტის ნომრებზე, პროტოკოლზე, მივანიჭებთ 100-199, 2000-2699;
>en
>conf t
>access-list {num} deny {ip&wildcard}
>int{outbound or inbound}
>ip access-group {num} out/in
>exit
>access-list {num} permit any
______________________________________

access-list 10 deny 192.168.1.0 0.0.0.255
access-list 10 permit 192.168.3.0 0.0.0.255
access-list 10 permit 192.168.4.0 0.0.0.255

access-list 10 deny 192.168.3.0 0.0.0.255
access-list 10 permit 192.168.1.0 0.0.0.255
access-list 10 permit 192.168.2.0 0.0.0.255

_______________________________________


>NAT&PAT
ქსელის მისამართის თარგმნა (NAT) ასახავს პირად IP მისამართებს ერთ საჯარო IP-ზე, 
რაც საშუალებას აძლევს მრავალ მოწყობილობას გააზიარონ ერთი და იგივე საჯარო IP. 
პორტის მისამართის თარგმანი (PAT) თითოეულ კავშირს ანიჭებს უნიკალურ პორტებს.
___________________________________________________________________________
>IPV4 & IPV6
ipv4 - 32bit ორობითი
ipv6 - 128bit თექვსმეტობითი;
ipv6:
მუშაობს OSI მოდელის network დონეზე და TCP/UDP-ს ინტერნეტის დონეზე;
Dual stack -> როცა მოწყობილობა იყენებს აიპის ორივე ვერსიას.
Tunnelinng -> აიპივ4 ის პაკეტის შიგნით აიპვ6 ის ინკაფსულაცია.
Translation-> გადაქსასთვა ვ4 დან ვ6 ზე;
 
IPv4 ტერმინოლოგია    IPv6 ტერმინოლოგია
ქსელის მისამართი       IPv6  პრეფიქსი
ჰოსტის მისამართი        ინტერფეისის მისამართი
ქსელის მასკა (ნიღაბი)    პრეფიქსის სიგრძე    

IPv6 მისამართების ტიპები 
Unicast (ინდივიდუალური)- აღწერს IPv6-თავსებადი მოწყობილობის ინტერფეისს (პაკეტი გაგზავნილი ამგვარ მისამართზე მიუვა მხოლოდ(ერთადერთ) შესაბამის ინტერფეისს) 
Multicast (ჯგუფური)– IPV6 მისამართი, რომელიც გამოიყენება ერთი და იმავე პაკეტის რამოდენიმე მიმართულებით(Destination)
დაგზავნისათვის (პაკეტი გაგზავნილი ამგვარ მისამართზე მიუვა ყველა იმ ინტერფეისს, რომელიც მიბმულია მრავალმისამართიანი დაგზავნის ჯგუფს).
Anycast (თავისუფალი) – Unicast IPV6 მისამართი, რომელიც შესაძლებელია მიენიჭოს რამოდენიმე კვანძს(Host). 
დაგზავნისას პაკეტი მიუვა ამ მისამართის მქონე უახლოეს კვანძს(Host) 
(პაკეტი გაგზავნილი ამგვარ მისამართზე მიუვა მარშრუტიზატორის მეტრიკით განსაზღვრულ უახლოეს კვანძს, მოცემული მისამართი შესაძლებელია გამოყენებულ იქნას მხოლოდ მარშრუტიზატორებში) 
___________________________________________________________________________________________________________________________________________________________________________________

>STP
Spanning Tree Protocol (STP) არის ქსელის პროტოკოლი, რომელიც გამოიყენება Ethernet ქსელებში მარყუჟების თავიდან ასაცილებლად, ზედმეტი შეერთებების დინამიურად იდენტიფიცირებითა და ბლოკირებით.
STP მუშაობს ერთი გადამრთველის „root bridge“ დანიშვნით და ზედმეტი ბმულების შერჩევით ბლოკირებით მარყუჟისგან თავისუფალი ქსელის შესაქმნელად.
____________________________________________________________________________________________________________________________________________________________________________________

>TCP/UDP
TCP: კავშირზე ორიენტირებული პროტოკოლი. ამყარებს საიმედო, ორმხრივ კავშირს მონაცემთა გაცვლამდე.
UDP: უკავშირო პროტოკოლი. არ ამყარებს კავშირს მონაცემების გადაცემამდე.
_______________________________
>IP CLASS classifications;
Class A:
Range: 1.0.0.0 to 126.255.255.255
Class B:
Range: 128.0.0.0 to 191.255.255.255
Class C:
Range: 192.0.0.0 to 223.255.255.255
__________________________________



>EIGRPV6 იგივე EIGRPV3
>ipv6 unicast-routing
>ipv6 router eigrp {num}
>eigrp router-id {1.1.1.1}
>no sh
>exit
>int {outbound and inbound interfaces}
>ipv6 eigrp {num}
>no sh
________________________________________
>OSPFV6 იგივე OSPFV3
>ipv6 unicast-routing
>ipv6 router ospf {num}
>router-id {num.num.num.num}
>exit
___________

>int {outbound and inbound interfaces}
>ipv6 ospf 1 area {num}
>exit

შეადარეთ IPv4 და IPv6 მისამართები-- IPv4 იყენებს 32-ბიტიან მისამართებს, ხოლო IPv6 იყენებს 128-ბიტიან მისამართებს, რაც უზრუნველყოფს მნიშვნელოვნად უფრო დიდ მისამართს. 
IPv6- ს ასევე აქვს გამარტივებული სათაურის ფორმატი, ჩაშენებული მხარდაჭერა მომსახურების ხარისხისთვის (QoS) და იყენებს მოქალაქეობის არმქონე მისამართის ავტოკონფიგურაციას.

რა შემთხვევაში შეიძლება შეიქმნას loop?--- როცა სვიჩებს შორის კავშირის დაცვისთვის  არსებობს სარეზევო კავშირი

Nat მუშაობის ალგორითმი--ქსელის მისამართის თარგმნა (NAT) არის პროცესი, რომლის დროსაც ერთი ან მეტი ადგილობრივი IP მისამართი ითარგმნება ერთ ან მეტ გლობალურ IP მისამართად და პირიქით, 
ლოკალური ჰოსტებისთვის ინტერნეტით წვდომის უზრუნველსაყოფად. როდესაც პაკეტი გადის ლოკალური ქსელის გარეთ, NAT გარდაქმნის ამ ლოკალურ IP მისამართს გლობალურ IP მისამართად.
როდესაც პაკეტი შედის ლოკალურ ქსელში, გლობალური IP მისამართი გარდაიქმნება ლოკალურ IP მისამართად.


NAT ტექნოლოგიის მუშაობის პრინციპი-- NAT-ის იდეა არის ის, რომ მრავალ მოწყობილობას დაუშვას ინტერნეტში წვდომა ერთი საჯარო მისამართის მეშვეობით. 
ამის მისაღწევად საჭიროა ლოკალური (პირადი) IP მისამართის საჯარო IP მისამართად თარგმნა. ქსელის მისამართის თარგმნა (NAT) არის პროცესი, 
რომლის დროსაც ერთი ან მეტი ადგილობრივი IP მისამართი ითარგმნება ერთ ან მეტ გლობალურ IP მისამართად და პირიქით, ლოკალური ჰოსტებისთვის ინტერნეტით წვდომის უზრუნველსაყოფად. 
როდესაც პაკეტი გადის ლოკალური ქსელის გარეთ, NAT გარდაქმნის ამ ლოკალურ IP მისამართს გლობალურ IP მისამართად. 
როდესაც პაკეტი შედის ლოკალურ ქსელში, გლობალური IP მისამართი გარდაიქმნება ლოკალურ IP მისამართად.4


.როგორი სტრუქტურა აქვს MAC მისამართს --- გამოისახება 16-ით ფორმატში და შედგება 2 ნაწილისგან



.როგორ მუშაობს STPპროტოკოლი-- პირველ რიგში სვიჩებმა უნდა აირჩიონ ერთერთი სვიჩი როგორც root სვიჩი,რათა სვიჩებს შორის კავშირი მოხდეს ამ root სვიჩის გავლით.
იმისთვის რომ სვიჩებმა აირჩიონ root სვიჩი იყენებენ BPDU მესიჯებს . BPDU მესიჯებში არის მოთავსებული თითვეული სვიჩის ID. სვიჩის ID შედგება ორი კომპონენტისგან :პრიორიტეტი და მაკ მისამართი. სვიჩი რომელსაც აქვს უფრო დაბალი თანრიგის მაკ მისამართი ხდება როოტ ბრიჯი.შემდეგ ირჩევს უმოკლეს გზას.სვიჩებს შორის გზის სიგრძე განისაზღვრება ორი პარამეტრის მიხედვით:შუალედური სვიჩების რაოდენობა დაკავშირის სიჩქარე შუალედურ სვიჩებს შორის.გზის დადგენის შემდეგ კი თიშავს კავშირს.
STP პროტოკოლის წესების მიხედვით, თუ ჩვენ გვაქვს ორი გზა root სვიჩამდე, უნდა ავირჩიოთ მინიმალური მანძილის გზა და გამორთოთ სხვა გზა.
ღია კითხვები :
Eigrpv3-
a network protocol that enables routers to exchange information more efficiently than earlier network protocols
EIGRP პროტოკოლს მეორე ნაირად ეძახიან ჰიბრიდულ როუტინგ პროტოკოლს რადგან მისი ალგორითმი გავს როგორც Distance vector ასევე link-State როუტინგ  პროტოკოლეებს.
ის ამყარებს მეზობლობას Hello პაკეტების საშუალებით. თუ როუტერმა გააგზავნა და მიიღო ამ ტიპის პაკეტი ამ შემთხვევაში მეზობლობა მყარდება როუტერებს შორის. EIGRP პროტოკოლით დაკომფიგურირებული როუტერები მეზობლობის დამყარების შემდეგ ერთმანეთში ცვლიან როუტინგ ინფორმაციას და ამ ინფორმაციაზე დაყრდნობით აგებენ ტოპოლოგიის რუკას (ცხრილს).
EIGRP პროტოკოლს გააჩნია სამი მსგავსი ბაზა
მეზობელი როუტერების ბაზა (რუკა)
ტოპოლოგიის რუკა 
მარშუტიზაციის ცხრილი

ACL-
ACL-ის მთავარი მიზანია უსაფრთხოების გაუმჯობესება სისტემის სხვადასხვა კომპონენტზე წვდომის შეზღუდვით ან დაშვებით.
ACL უზრუნველყოფს კონტროლს ქსელის ტრაფიკზე, რაც საშუალებას აძლევს ქსელის ადმინისტრატორებს ეფექტურად მართონ და დაიცვან თავიანთი ქსელი.
როგორ მუშაობს წვდომის კონტროლის სიები
ACL-ები მოქმედებენ თანმიმდევრულად, პაკეტები მოწმდება სიაში თითოეული წესის მიხედვით, სანამ არ მოიძებნება შესატყვისი. თუ შესატყვისი არ არის ნაპოვნი, გამოიყენება ნაგულისხმევი მოქმედება.
ACL წესები შეიძლება კონფიგურირებული იყოს გარკვეული ტრაფიკის დასაშვებად ან უარყოფისთვის, ან გარკვეული ტიპის ტრაფიკისთვის პრიორიტეტებად მისანიჭებლად.
 ACL განსაზღვრავს რა ოპერაციებს ფაილებზე, პროგრამებზე ან პროცესებზე აქვს ნებადართული ან აკრძალული მომხმარებლის ან ჯგუფის შესრულება.


IPv6 მისამართების ტიპები -
Unicast (ინდივიდუალური)- აღწერს IPv6-თავსებადი მოწყობილობის ინტერფეისს (პაკეტი გაგზავნილი ამგვარ მისამართზე მიუვა მხოლოდ(ერთადერთ) შესაბამის ინტერფეისს) 
Multicast (ჯგუფური)– IPV6 მისამართი, რომელიც გამოიყენება ერთი და იმავე პაკეტის რამოდენიმე მიმართულებით(Destination) დაგზავნისათვის (პაკეტი გაგზავნილი ამგვარ მისამართზე მიუვა ყველა იმ ინტერფეისს, რომელიც მიბმულია მრავალმისამართიანი დაგზავნის ჯგუფს) 
Anycast (თავისუფალი) – Unicast IPV6 მისამართი, რომელიც შესაძლებელია მიენიჭოს რამოდენიმე კვანძს(Host). დაგზავნისას პაკეტი მიუვა ამ მისამართის მქონე უახლოეს კვანძს(Host) (პაკეტი გაგზავნილი ამგვარ მისამართზე მიუვა მარშრუტიზატორის მეტრიკით განსაზღვრულ უახლოეს კვანძს, მოცემული მისამართი შესაძლებელია გამოყენებულ იქნას მხოლოდ მარშრუტიზატორებში) 
IPv6 IPv4 განსხვავებით არ იყენებს ფართომაუწყებლობით მისამართს, მის ნაცვლად გამოიყენება Multicast მისამართი

სვიჩის თითოეული პორტი vlan-ში:
შეიძლება ეკუთვლონედ რამდენიმე ვლანს.
ქსელის მისამართის თარგმნა (NAT) არის პროცესი, რომლის დროსაც ერთი ან მეტი ადგილობრივი IP მისამართი ითარგმნება ერთ ან მეტ გლობალურ IP მისამართად და პირიქით
ღია კითხვები:
ზოგადად, სასაზღვრო როუტერი კონფიგურირებულია NAT-ისთვის, ანუ როუტერისთვის, რომელსაც აქვს ერთი ინტერფეისი ლოკალურ (შიდა) ქსელში და ერთი ინტერფეისი გლობალურ (გარე) ქსელში. როდესაც პაკეტი გადის ლოკალური (შიდა) ქსელის გარეთ, NAT გარდაქმნის ამ ლოკალურ (პირად) IP მისამართს გლობალურ (საჯარო) IP მისამართად. როდესაც პაკეტი შედის ლოკალურ ქსელში, გლობალური (საჯარო) IP მისამართი გარდაიქმნება ლოკალურ (პირად) IP მისამართად.
Osp პროტოკოლის მუშაობის პრიციპი:
როუტერები ამყარებენ ერთმანეთთან მეზობლობას. მეზობლობის დადგომის შემდეგ ქსელში ჩართული ყველა როუტერი ერთმანეთს უგზავნის LSA (link state )პაკეტებს რომლებიც შეიცავენ ინფორმაციას იმის შესახებ თუ რა ქსელები აქვთ მათ მიერთებული. 
IPv6 ტერმინოლოგია
IPv6  პრეფიქსი
ინტერფეისის მისამართი
პრეფიქსის სიგრძე
Ipv6 მუშაობს ნეთვორქ ლეიერზე
მარშრუტიზაცია სრულდება :
Layer 3  network
Pat:
Pat აკეთებს პორტის ნომრების თარგმნას, ანუ ნიღბავს ჰოსტის პორტის ნომერს სხვა პორტის ნომრით, იმ პაკეტში, რომელიც გადაიგზავნება დანიშნულების ადგილზე.
ინფორმაციის გაცვალ პაკეტებით ხდება.
ქსელის მისამართი-IPv6  პრეფიქსი (პირველი 4)
ჰოსტის მისამართი-ინტერფეისის მისამართი(ბოლო 4)
ქსელის მასკა (ნიღაბი)-პრეფიქსის სიგრძე
სულ 8 ნაწილი : ამეებით გამოყოფილი




ipv4 ipv6
IPV4-მისამართის 32 ბიტი თეორიულად 232, ანუ 4294967296 მისამართს იტევს ( 4.3 მილიარდამდე) - ბოლო წლებში მომრავლებული ქსელური მოწყობილობების წყალობით IP-მისამართების დეფიციტი მივიღეთ 

IPv6 128 ბიტ-ინფორმაციას შეიცავს და კოლოსალური რაოდენობის ქსელური მოწყობილობების დამისამართება შეუძლია ( 2128 რაც ოცდაცხრამეტნიშნა რიცხვია!) 
მოქმედებს OSI-ის მოცელის network layer-ზე.

Dual-Stack - მოწყობილობებს Dual-Stack მხარდაჭერით, ძალუძთ ერთს და იმავე ქსელში ორივე პროტოკოლის გამოყენებაDual 
Tunnelling - Tunnelling მეთოდის დროს ხდება - IPV4 პაკეტის შიგნით IPV6 პაკეტის ინკაპსულირება 
Translation - მოცემული მეთოდის დროს ხდება - IPV6 პაკეტის გარდაქმნა IPV4-ში და პირიქით 

Unicast (ინდივიდუალური)- აღწერს IPv6-თავსებადი მოწყობილობის ინტერფეისს (პაკეტი გაგზავნილი ამგვარ მისამართზე მიუვა მხოლოდ(ერთადერთ) შესაბამის ინტერფეისს) 
Multicast (ჯგუფური)– IPV6 მისამართი, რომელიც გამოიყენება ერთი და იმავე პაკეტის რამოდენიმე მიმართულებით(Destination) დაგზავნისათვის (პაკეტი გაგზავნილი ამგვარ მისამართზე მიუვა ყველა იმ ინტერფეისს, რომელიც მიბმულია მრავალმისამართიანი დაგზავნის ჯგუფს) 
Anycast (თავისუფალი) – Unicast IPV6 მისამართი, რომელიც შესაძლებელია მიენიჭოს რამოდენიმე კვანძს(Host). დაგზავნისას პაკეტი მიუვა ამ მისამართის მქონე უახლოეს კვანძს(Host) (პაკეტი გაგზავნილი ამგვარ მისამართზე მიუვა მარშრუტიზატორის მეტრიკით განსაზღვრულ უახლოეს კვანძს, მოცემული მისამართი შესაძლებელია გამოყენებულ იქნას მხოლოდ მარშრუტიზატორებში) 









როგორ მუშაობს VLAN?

ვირტუალური ლოკალური ქსელი, მისი საშუალებით იქმნება დამოუკიდებელი ლოგიკური ქსელები იმავე ფიზიკურ ქსელში. ის რეალიზებულია სვიჩებზე (კომუტატორებზე).
რეალიზებულია OSI-ის მოდელის Data Link დონეზე.
გამოიყენება: დიდ კომპანიებში სხვადასხვა განყოფილებების იზოლირებისთვის;
ბიზნეს-ცენტრებში სხვადასხვა კომპანიების იზოლირებისთვის;
ფართომაუწყებლობიან ქსელს ყოფს რამდენიმე ნაწილად
Access port - მიეკუთვნება მხოლოდ ერთ ვირტუალურ ლოკალურ ქსელს. მასზე შეიძლება მიერთდეს კომპიუტერი, პრინტერი და ა.შ. ანუ ენდ დევაისი
Trunk Port - რომელიც გამოიყენება სხვა სვიჩებთან ან როუტერთან დასაკავშირებლად.
მონაცემთა VLAN არის VLAN, რომელიც დაკონფიგურებულია მომხმარებლის მიერ დაგენერირებული ტრაფიკის გადასაგზავნად.
ომუტატორის ყველა პორტი ხდება Default VLAN-ის ნაწილი მას შემდეგ რაც კომუტატორის საწყისი ჩატვირთვა გაუშვებს Default კონფიგურაციას.

ახსენით რისთვის გამოიყენება nat და როგორ მუშობს ის ?

Network address translation (NAT) წარმოადგენს ტექნოლოგიას, რომელიც შიდა (კერძო) IP მისამართებს გარდაქმნის გარე IP მისამართებად (ინტერნეტი).
 NAT-ის იდეა არის ის, რომ მრავალ მოწყობილობას დაუშვას ინტერნეტში წვდომა ერთი საჯარო მისამართის მეშვეობით. ამის მისაღწევად საჭიროა ლოკალური
 (პირადი) IP მისამართის საჯარო IP მისამართად თარგმნა. 
ქსელის მისამართის თარგმნა (NAT) არის პროცესი, რომლის დროსაც ერთი ან მეტი ადგილობრივი IP მისამართი ითარგმნება ერთ 
ან მეტ გლობალურ IP მისამართად და პირიქით, ლოკალური ჰოსტებისთვის ინტერნეტით წვდომის უზრუნველსაყოფად. 
როდესაც პაკეტი გადის ლოკალური (შიდა) ქსელის გარეთ, NAT გარდაქმნის ამ ლოკალურ (პირად) IP მისამართს გლობალურ (საჯარო) IP მისამართად.
როდესაც პაკეტი შედის ლოკალურ ქსელში, გლობალური (საჯარო) IP მისამართი გარდაიქმნება ლოკალურ (პირად) IP მისამართად.
თუ NAT ახორციელებს მხოლოდ IP მისამართების თარგმნას, მაშინ როდესაც მათი პაკეტები NAT-ში მივა, მათი ორივე IP მისამართი დაიფარება ქსელის გარე IP მისამართით და 
გაიგზავნება დანიშნულების ადგილზე. დანიშნულების ადგილიდან გამოიგზავნება პასუხები როუტერის საჯარო IP მისამართზე. ამრიგად, პასუხის მიღებისას NAT-ისთვის გაუგებარი იქნება, 
თუ რომელი პასუხი რომელ ჰოსტს ეკუთვნის (რადგან წყაროს პორტის ნომრები ორივე A და B-სთვის არის იგივე). ამიტომ, ასეთი პრობლემის თავიდან ასაცილებლად, NAT ნიღბავს წყაროს 
პორტის ნომერსაც და აკეთებს ჩანაწერს NAT ცხრილში.



Pat აკეთებს პორტის ნომრების თარგმნას, ანუ ნიღბავს ჰოსტის პორტის ნომერს სხვა პორტის ნომრით, იმ პაკეტში, რომელიც გადაიგზავნება დანიშნულების ადგილზე.
















რა არის ipv6 მისამართის ტიპი anycast?
ა. იპვ6 მისამართი რომელიც შესაძლებელია მიენიჭოს რამდენიმე კვანძს, 
დაგზავნისას პაკეტი მიუვა ამ მისამართის მქონე უახლოეს კვანძს.

მარშუტიზატორი აკავშირებს 
ა. კომპიუტერულ ქსელებს

192,168,15,2/25  რომელია სწორი
ბ. ქსელი დაყოფილია ორ ქვექსელად
ც. ქსელში შეიძლება იყოს ჩართული 126 ჰოსტი

FE80:0000:0000:0000:02AA:0000:FE9A:4CA3   შეკუმშული ფორმაა: 
FE80::2AA::FE9A:4CA3

VLAN რეალიზებულია :
ა.  DATA LINK ZE

SHOW IP INTERFACE BRIEF 


როგორი სტრუქტურა აქვს მაკ მისამართს ?
ა. გამოისახება 16ობით ფორმატში და შედგება 2 ნაწილისგან

რა არის ვლან?
ც. ტექნოლოგია რომელიც ერთ ქსელს ყოფს რამდენიმე ლოგიკურ ქსელად, და ეს ქსელები იზოლირებულია ერთმანეთთან. 

რა არის ნატ?
ა. ტექმოლოგია  რომელიც შიდა იპ მისამართებს გარდაქმნის გარე იპ მისამართებად.

იპვ6 ის მისამართთან მიმართებაში მცდარია :
ა. 128 ბიტი წარმოდგენილია 4 ჰექსტეტით

მარშუტიზაცია სტულდება 
ბ. სატრანსპორტო დონეზე


192,168,7,8,/27 დაწერეთ ქვექსელების დასაშვები რაოდენობა ?
8. 

რომელი შეესაბამება პასტ? 
ა. პროცესი როდესაც პორტის ნომრები გამოიყენება ტრაფიკის გასარჩევად, ანუ რომელი ტრაფიკი ეკუთნის რომელ იპ მისამარტს.


ქსელის ნიღაბი ბ კლასისთვის
255,255,0,0
 
 
ქვექსელის ნიღაბში 29 ეკუთნის ქსელს. ნიშაბი იქნება 
255,255,255,248

ოსპფ პროტოკოლი მუშაობს პრინციპით:
ა. როუტერი ერთმანეთს უგზანის LSA პაკეტებს რომლებიც შეიცავენ ინფორმაციას იმის შესახებ თუ რა ქსელები ააქვთ მათ მიერთებული. 


იპვ6 შეესაბამება:
იპვ6 პრეფიქსი
პრეფიქსის სიგრძე



>EIGRPV6 იგივე EIGRPV3
>ipv6 unicast-routing
>ipv6 router eigrp {num}
>eigrp router-id {1.1.1.1}
>no sh
>exit
>int {outbound and inbound interfaces}
>ipv6 eigrp {num}
>no sh
________________________________________
>OSPFV6 იგივე OSPFV3
>ipv6 unicast-routing
>ipv6 router ospf {num}
>router-id {num.num.num.num}
>exit
___________

>int {outbound and inbound interfaces}
>ipv6 ospf 1 area {num}
>exit
_____________________________________
ACL
>en
>conf t
>access-list {num} deny {ip&wildcard}
>int{outbound or inbound}
>ip access-group {num} out/in
>exit
>access-list {num} permit any
______________________________________

access-list 10 deny 192.168.1.0 0.0.0.255
access-list 10 permit 192.168.3.0 0.0.0.255
access-list 10 permit 192.168.4.0 0.0.0.255

access-list 10 deny 192.168.3.0 0.0.0.255
access-list 10 permit 192.168.1.0 0.0.0.255
access-list 10 permit 192.168.2.0 0.0.0.255

_______________________________________



GIG0/1 
ip nat insaide
exit
GIG0/0 
Ip nat outside
Exit
შემდეგ მოვნიშნავთ ქსელს რომელიც უნდა გადაითარგმნოს გარე ip მისამართში
Config t
Acces-list  1 permit 192.168.5.0 0.0.0.255
ip nat inside source list 1 interface gigabitEthernet 0/0 overload





ipv6 მუშაობს 
ნეტვორკ ქსელის დონეზე